{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAAaA,W;;;;;;;wCAEGC,G,EAAI;AAChB,gBAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,mBAAOH,GAAP;AACD;;;8BAGGI,G,EAAK;AAAA;;AAEP;AACA,mBAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,qBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADD,EAEJM,IAFI,CAEC;AAAA,qBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFD,CAAP;;AAIA;;;;;;;;;;;;;;AAeD;;;+BAGIJ,G,EAAKK,I,EAAM;AAAA;;AAEd,mBAAOJ,MAAMD,GAAN,EAAW;AAChBM,uBAAS,EAAC,gBAAgB,kBAAjB,EADO;AAEhBC,sBAAQ,MAFQ;AAGhBC,oBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHU,aAAX,EAIJH,IAJI,CAIC;AAAA,qBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aAJD,CAAP;;AAOA;;;;;;;;;;;;;;;;;AAsBD","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n\r\n  _handleErrors(res){\r\n    if(!res.ok) throw new Error(res.statusText);\r\n    return res;\r\n  }\r\n\r\n\r\n  get(url) {\r\n\r\n    //Fetch API\r\n    return fetch(url)\r\n      .then(res => this._handleErrors(res))\r\n      .then(res => res.json());\r\n\r\n    /* return new Promise((resolve, reject) => {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url);\r\n      xhr.onreadystatechange = () => {\r\n\r\n        if (xhr.readyState == 4) {\r\n          if (xhr.status == 200) {\r\n            resolve(JSON.parse(xhr.responseText));\r\n          } else {\r\n            reject(xhr.responseText);\r\n          }\r\n        }\r\n      };\r\n      xhr.send();\r\n    }) */\r\n  }\r\n\r\n\r\n  post(url, dado) {\r\n\r\n    return fetch(url, {\r\n      headers: {'Content-type': 'application/json'},\r\n      method: 'post',\r\n      body: JSON.stringify(dado)\r\n    }).then(res => this._handleErrors(res))\r\n\r\n\r\n    /* return new Promise((resolve, reject) => {\r\n\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", url, true);\r\n      xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n      xhr.onreadystatechange = () => {\r\n\r\n        if (xhr.readyState == 4) {\r\n\r\n          if (xhr.status == 200) {\r\n\r\n            resolve(JSON.parse(xhr.responseText));\r\n          } else {\r\n\r\n            reject(xhr.responseText);\r\n          }\r\n        }\r\n      };\r\n      xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string no formato JSON.\r\n    });\r\n    \r\n  */\r\n  }\r\n}"]}